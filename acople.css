* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    --back: rgb(0,0,0);
    --main: rgb(255,255,255);
    --sMain: rgba(255,255,255,0.2);
    --lMain: rgba(255,255,255,0.6);
}
body {
    background: var(--back);
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    /* debug */
    display: flex;
    justify-content: center;
    align-items: center;
    /* to not interact*/
    /* pointer-events: none;  */
    user-select: none;
    cursor: none;
}

/* STAGE ################################################# */
.stage {
    position: absolute;
    width: 850px;
    height: 500px;
    /* border: 1px solid black; <=============== debug */
    border-top-right-radius: 60px 250px;
    border-bottom-right-radius: 60px 250px;
    border-top-left-radius: 60px 250px;
    border-bottom-left-radius: 60px 250px;
    border-right: 3px solid var(--main);
    border-left: 3px solid var(--main);
    animation: instructionsBorder 1s linear infinite;
}
@keyframes instructionsBorder {
    0% {box-shadow:inset 5px -5px 4px rgba(0, 255, 255, 0.5), inset -5px -5px 4px rgba(0, 255, 255, 0.5);} 
    33% {box-shadow:inset 5px -5px 4px rgba(255, 0, 255, 0.5), inset -5px -5px 4px rgba(255, 0, 255, 0.5);}
    66% {box-shadow:inset 5px -5px 4px rgba(255, 255, 0, 0.5), inset -5px -5px 4px rgba(255, 255, 0, 0.5);}
    100% {box-shadow:inset 5px -5px 4px rgba(0, 255, 255, 0.5), inset -5px -5px 4px rgba(0, 255, 255, 0.5);}
}

/* DOTS ################################################## */
.dot {
    position: absolute;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    /* border: 1px solid black; <=============== debug */
}

/* .debug {
    top: 100px;
    left: 100px;
    border: 4px solid rgb(100,100,100);
}
.fa-arrows-alt-h { 
    font-size: 30px;
    color: rgb(100,100,100);
    text-align: center;
} */
.buff {
    font-size: 30px;
    color: var(--main);
    text-align: center;
    border: 4px solid var(--main);
    animation: playerBorder 0.5s linear infinite reverse;
} 

.buffSpawn {animation: bSpawn 1.5s linear;}
@keyframes bSpawn {
    from {color: var(--back); border: 4px solid var(--back);}
    to {color: var(--main); border: 4px solid var(--main);}
}
.buffGone {animation: bGone 1.5s linear;}
@keyframes bGone {
    from {color: var(--main); border: 4px solid var(--main);}
    to {color: var(--back); border: 4px solid var(--back);}
}

.lim {
    position: absolute;
    width: 400px;
    height: 400px;
    border-radius: 50%;
    border: 3px dashed var(--sMain);
    animation: limRot 20s linear infinite;
}

.ct {
    border-radius: 50%;
    /* border: 2px solid black;  <=============== debug */
    z-index: 2; /* <======== remove */
}

 /* COLLISION ############################################# */
 .collide {
     width: 15px;
     height: 15px;
     border: 2px dotted red;
 }

 /* BLOCKS ############################################### */
 .block {
    position: absolute;
    /* border: 1px solid black; <=============== debug */
    border-radius: 5px;
    border: 1px solid var(--main);
 }
 .blockSpawn {animation: blockStart 1s linear;}
 .playerSpawn {animation: blockStart 2s linear;}
 .blockGone {animation: blockGone 0.5s linear;}

.player {
    animation: playerBorder 1s linear infinite;
    background: var(--main);
}
@keyframes playerBorder {
    0% {box-shadow: 0 0 15px rgba(0, 255, 255, 1);} 
    33% {box-shadow: 0 0 15px rgba(255, 0, 255, 1);}
    66% {box-shadow: 0 0 15px rgba(255, 255, 0, 1)}
    100% {box-shadow: 0 0 15px rgba(0, 255, 255, 1)}
}

 @keyframes blockStart {
     from {border: 1px solid var(--back);}
     to {border: 1px solid var(--main);}
 }
 @keyframes blockGone {
     from {border: 1px solid var(--main);}
     to {border: 1px solid var(--back);}
 }
 @keyframes limRot {
     from {transform: rotate(0deg);}
     to {transform: rotate(360deg);}
 }

 /* INSTRUCTIONS ########################################################### */
 #instructions {
    width: 400px;
    height: 400px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    /* border: 1px solid var(--main); */
    color: var(--lMain);
    font-size: 25px;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    animation: inSpawn 5s;
}
 #instructions p {
     width: 400px;
     height: 100px;
     text-align: center;
     /* border: 1px solid var(--main); */
 }
 @keyframes inSpawn {
     from {color: var(--back);}
     to {color: var(--lMain);}
 }

 /* INTERFACE ################################################################# */
 .time {
    position: absolute;
    width: 250px;
    height: 50px;
    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: 40px;
    color: var(--sMain);
    /* border: 1px solid white; */
    animation: interfaceShadows 1s linear infinite;
    text-align: center;
 }
 .lifes {
    display: flex;
    justify-content:space-around;
 }

 @keyframes interfaceShadows {
    0% {text-shadow: 0px 0px 10px rgba(0, 255, 255, 0.4);} 
    33% {text-shadow: 0px 0px 10px rgba(255, 0, 255, 0.4);}
    66% {text-shadow: 0px 0px 10px rgba(255, 255, 0, 0.4);}
    100% {text-shadow: 0px 0px 10px rgba(0, 255, 255, 0.4);}
}

/* GAME OVER ######################################################### */
#won, #lost {
    z-index: 3;
    position: absolute;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(8px);
    display: none;
    align-items: center;
    text-align: center;
    justify-content: center;
    color: rgba(255, 255, 255, 0.8);
    font-size: 90px;
    /* animation: instructionsBorder 1s linear infinite; */
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}